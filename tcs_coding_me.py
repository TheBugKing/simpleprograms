# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UuoQ4SQz7P0kkmfjbc5An89nr2O_p-XI
"""

#fibbo seris

a=-1
b=1
n=5
for i in range(n):
  c=a+b
  a=b
  b=c
  print(c)



string="hello"
string[::-1]



# factors of number
# sum of digits of num
# factorial of num
# int palindrome
# string palindrome
# armstrong
# sum of prime in given range

#factors of number
n=14
factor=[i for i in range(1,n+1) if(n % i == 0)]
print(factor)

#sum of digits of number
num=758
sum=0
while(num):
  a=num%10
  sum+=a
  num=num/10
  
print(sum)

#factorial of number
n=5
fact=0
while(n):
  fact=n*(n-1)
  n=n-1
print(fact)

#str palindrome
string="nayan"
if(string == string[::-1]):
  print("true")
else:
  print("false")

#int palindrom
num=123
pal=0
while(num):
  reminder=num % 10
  pal=10*pal+reminder
  num=num/10
if(num == pal):
  print("true")
else:
  print("false")

#sum of prime

num=14
s=0

for i in range(1,num+1):
  count=0
  for j in range(1,num+1):
    if(i%j==0):
      count=count+1
  if(count==2):
    s=s+i
print(s)

#armstrong
num=371
sum=0
temp=num
while(num):
  rem=num % 10
  sum= sum+ rem * rem * rem
  num=num/10
if sum==temp:
  print("true")
else:
  print("false")

#binary to decimal
def binaryde(binary):
	d=0
	i=0
	while(binary):
  		rem=binary % 10
  		d=d + (rem * 2 ** i)
  		i=i+1
  		binary=binary/10
	return d

binaryde(11011)

#decimal to binary
def decimalBi(decimal):
	b=[]
	while(decimal):
		rem=decimal % 2
		b.append(rem)
		decimal=decimal/2
	return (int("".join(map(str, b[::-1]))))
decimalBi(26)

#odd even number
num=8
if(num%2==0):
  print("even")
else:
  print("odd")

#binary to octal
def binaryoct(binary):
  bno=binaryde(binary)
  o=[]
  while(bno):
    rem=bno % 8
    o.append(rem)
    bno=bno/8
  return (int("".join(map(str, o[::-1]))))
  
binaryoct(110111011)

#decimal to octal
def decimaloct(decimal):
  o=[]
  while(decimal):
    rem=decimal % 8
    o.append(rem)
    decimal=decimal/8
  return (int("".join(map(str, o[::-1]))))


decimaloct(25)

#reverse digits of number
num=256
rev=0
while(num):
  rem=num%10
  rev=10 * rev + rem
  num=num/10
print(rev)

#area of circle
def areacircle(radius):
  return (3.14 * (radius**2))
areacircle(3)

#area of traingle
def areatriangle(base,height):
  print('{0:.2f}'.format(base*height*0.5))

areatriangle(11,3)

#square root
def squarert(number):
  return number**0.5
squarert(243)

#square root of prime numbers
def sqrprime(number):
  for i in range(1,number+1):
    count=0
    for j in range(1,number+1):
      if(i%j==0):
        count=count+1
    if count==2:
      print(i,squarert(i))

sqrprime(10)

#leap year

def leap(year):
  if year%4==0 and (not year%100==0 or year%400==0):
    return True
  else:
    return False
leap(2016)

def rangeleapyear(fr,to):
	if fr>to:
		fr,to=to,fr
	for i in range(fr,to+1):
		if leap(i):
			print(i)
rangeleapyear(2020,2040)

even=odd=0
n=16
for i in range(1,n+1):
  if i%2==0:
    if i==n:
      print(3**even)
    even+=1
  else:
    if i==n:
      print(2**odd)
    odd+=1

#seris 1,1,2,2,4,4,6,6,8,8
n=8
e=o=0
for i in range(1,n+1):
  if i%2==0:
    if(i==n):
      print(2**e)
    e=e+1
  else:
    if (i==n):
      print(2**o)
    o=o+1

#0,0,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8
n=9
num=0
for i in range(1,n+1):
  if (i % 2 !=0):
    num=i-1
    if(i==n):
      print(num)
  elif (i % 2==0):
    num=num/2
    if(i==n):
      print(num)

def lcm(x,y):
  if x>y:
    greatest=x
  elif y>x:
    greatest=y
  else:
    lcm=x
  while(greatest):
    if(greatest%x==0 and greatest%y==0):

